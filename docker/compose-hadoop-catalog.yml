name: iceberg-bank-recon

services:
  spark-master:
    build:
      context: ./spark
      dockerfile: Dockerfile.3.5.6
    container_name: spark-master
    ports:
      - "8082:8080"  # Spark master UI (using 8082 to avoid conflicts)
      - "7077:7077"  # Spark master port
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ../data:/opt/bitnami/spark/data
      - ../src:/opt/bitnami/spark/src
      - ../notebooks:/opt/bitnami/spark/notebooks
      - ../scripts:/opt/bitnami/spark/scripts
    networks:
      - iceberg-network

  spark-worker:
    build:
      context: ./spark
      dockerfile: Dockerfile.3.5.6
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8083:8081"  # Spark worker UI (using 8083 to avoid conflicts)
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ../data:/opt/bitnami/spark/data
      - ../src:/opt/bitnami/spark/src
      - ../scripts:/opt/bitnami/spark/scripts
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    networks:
      - iceberg-network

  jupyter:
    build:
      context: ./spark
      dockerfile: Dockerfile.3.5.6
    container_name: jupyter
    depends_on:
      - spark-master
    ports:
      - "8889:8888"  # Jupyter notebook (using 8889 to avoid conflicts)
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ../data:/opt/bitnami/spark/data
      - ../src:/opt/bitnami/spark/src
      - ../notebooks:/opt/bitnami/spark/notebooks
      - ../scripts:/opt/bitnami/spark/scripts
    command: >
      bash -c "
        cd /opt/bitnami/spark/notebooks && jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
      "
    networks:
      - iceberg-network

  minio:
    image: docker.arvancloud.ir/bitnami/minio:2025.4.22
    container_name: minio
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_API_PORT_NUMBER=9000
      - MINIO_CONSOLE_PORT_NUMBER=9001
      - MINIO_SCHEME=http
      - MINIO_DEFAULT_BUCKETS=warehouse
    healthcheck:
      test: [ "CMD", "mc", "ls", "local", "|", "grep", "irisa-ot-warehouse" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 15s
    volumes:
      - minio-data-simple:/bitnami/minio/data
    # command: server /data --console-address ":9001"
    networks:
      - iceberg-network

  postgres:
    image: docker.arvancloud.ir/bitnami/postgresql:17
    container_name: postgres
    ports:
      - "5455:5432"
    environment:
      - POSTGRESQL_USERNAME=iceberg
      - POSTGRESQL_PASSWORD=iceberg
      - POSTGRESQL_DATABASE=iceberg_catalog
    volumes:
      - postgres-data-simple:/bitnami/postgresql
    networks:
      - iceberg-network

networks:
  iceberg-network:
    driver: bridge

volumes:
  minio-data-simple:
  postgres-data-simple:
